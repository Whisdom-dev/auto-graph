import React, { useContext } from "react";
import { BrowserRouter as Router, Routes, Route, Navigate } from "react-router-dom";
import HomePage from "./components/HomePage";
import ProductsPage from "./components/ProductsPage";
import ProductDetail from "./components/ProductDetail";
import Navbar from "./components/NavBar";
import CartPage from "./components/CartPage";
import LoginPage from "./components/LoginPage";
import ForgotPassword from './components/ForgotPassword';
import SignUp from './components/SignUp';
import { CartProvider } from "./components/CartContext";
import { AuthProvider, AuthContext } from "./components/AuthContext";
import 'swiper/css';
import 'swiper/css/navigation';

const PrivateRoute = ({ element }) => {
  const { isAuthenticated } = useContext(AuthContext);
  return isAuthenticated ? element : <Navigate to="/login" replace />;
};

const App = () => {
  return (
    <AuthProvider>
      <CartProvider>
        <Router>
          <Navbar />
          <Routes>
            <Route path="/" element={<HomePage />} />
            <Route path="/products" element={<ProductsPage />} />
            <Route path="/product/:id" element={<ProductDetail />} />
            <Route path="/cart" element={<PrivateRoute element={<CartPage />} />} />
            <Route path="/login" element={<LoginPage />} />
          </Routes>
        </Router>
      </CartProvider>
    </AuthProvider>
  );
};

export default App;

import React, { createContext, useState, useEffect } from 'react';

// Create the context
export const AuthContext = createContext();

// Provider component
export const AuthProvider = ({ children }) => {
  const [isAuthenticated, setIsAuthenticated] = useState(() => {
    return localStorage.getItem('isAuthenticated') === 'true';
  });

  useEffect(() => {
    localStorage.setItem('isAuthenticated', isAuthenticated);
  }, [isAuthenticated]);

  const login = () => setIsAuthenticated(true);

  const logout = () => {
    setIsAuthenticated(false);
    localStorage.removeItem('isAuthenticated');
  };

  return (
    <AuthContext.Provider value={{ isAuthenticated, login, logout }}>
      {children}
    </AuthContext.Provider>
  );
};

import React, { createContext, useState } from 'react';

// Create the context
export const CartContext = createContext();

// Create a provider component
export const CartProvider = ({ children }) => {
  const [cartItems, setCartItems] = useState([]);

  // Add to cart
  const addToCart = (product) => {
    setCartItems((prevItems) => {
      const existing = prevItems.find((item) => item.id === product.id);

      if (existing) {
        // Increase quantity
        return prevItems.map((item) =>
          item.id === product.id
            ? { ...item, quantity: (item.quantity || 1) + 1 }
            : item
        );
      } else {
        // Add new item
        return [...prevItems, { ...product, quantity: 1 }];
      }
    });
  };

  // Remove from cart
  const removeFromCart = (productId) => {
    setCartItems((prevItems) =>
      prevItems.filter((item) => item.id !== productId)
    );
  };

  // Clear cart
  const clearCart = () => {
    setCartItems([]);
  };

  return (
    <CartContext.Provider
      value={{
        cartItems,
        addToCart,
        removeFromCart,
        clearCart,
      }}
    >
      {children}
    </CartContext.Provider>
  );
};

import React, { useContext } from 'react';
import { CartContext } from '../components/CartContext';

const CartPage = () => {
  const { cartItems, removeFromCart } = useContext(CartContext);

  const total = cartItems.reduce((sum, item) => sum + parseFloat(item.price.replace(/[^\d.]/g, '')) * item.quantity, 0);

  return (
    <div className="p-6 bg-white min-h-screen">
      <h2 className="text-2xl font-bold mb-4">Your Cart</h2>

      {cartItems.length === 0 ? (
        <p className="text-gray-600">Your cart is empty.</p>
      ) : (
        <div>
          <ul className="space-y-4">
            {cartItems.map((item) => (
              <li key={item.id} className="flex justify-between items-center border-b pb-2">
                <div>
                  <h4 className="text-lg">{item.name}</h4>
                  <p>Qty: {item.quantity}</p>
                  <p>Price: {item.price}</p>
                </div>
                <button
                  className="text-red-600 hover:underline"
                  onClick={() => removeFromCart(item.id)}
                >
                  Remove
                </button>
              </li>
            ))}
          </ul>

          <div className="mt-6 text-xl font-semibold">
            Total: €{total.toFixed(2)}
          </div>
        </div>
      )}
    </div>
  );
};

export default CartPage;

import React, { useState } from 'react'

const ForgotPassword = () => {
    const [email, setEmail] = useState('');
    const [successMessage, setSuccessMessage] = useState('');

    const handleForgotPassword = (e) => {
        e.preventDefault();

        setSuccessMessage(
            `If an account with ${email} exists, a password reset link has been sent.`
        );

        setEmail('')
    };

    return (
        <div className='flex bg-gray-100 items-center justify-center h-screen w-full'>
            <form 
                onSubmit={handleForgotPassword}
                className='bg-white p-8 rounded-lg shadow-md w-11/12 sm:w-3/4 md:w-1/2 lg:w-1/3'
             >
                    <h2 className='text-2xl sm:text-3xl font-bold text-center mb-6 text-gray-800'>Forgot Password</h2>
                    {successMessage && (
                        <div className='bg-green-100 text-green-800 p-4 rounded mb4 text-sm sm:text-base'>
                            {successMessage}
                        </div>
                    )}

                 <div className='mb-6'>
                     <label
                          htmlFor='email'
                          className='block mb-2 font-medium text-gray-700 text-sm sm:text-lg'
                        >
                                Email Address
                            </label>
                            <input
                            type='email'
                            id='email'
                            value={email}
                            onChange={(e) => setEmail(e.target.value)}
                            className='w-full border rounded-lg p-3 text-sm sm:text-lg focus:ring-blue-500'
                            placeholder='Enter your email address'
                            required
                         />
                 </div>

                    <button 
                        type='submit'
                        className='bg-blue-600 text-white w-full py-3 rounded-lg text-sm sm:text-lg hover:bg-blue-700 transition duration-300'
                    >
                        Send Reset Link
                    </button>

                 <div className='mt-4 text-center'>
                        <a
                            href='/login'
                            className='text-blue-500 hover:underline text-sm sm:text-base'
                        >
                            Back to Login
                        </a>
                 </div>
             </form>
        </div>
    );
};

export default ForgotPassword;

import React from "react";
import { Link } from 'react-router-dom';
import { motion } from 'framer-motion';
import Footer from "../components/Footer";
import HeroImage from '../images/HeroImage.webp';
import img1 from '../images/img1.jpg';
import img2 from '../images/img2.webp';
import img3 from '../images/img3.webp';
import img4 from '../images/img4.jpg';
import img5 from '../images/img5.webp';
import img6 from '../images/img6.webp';
import img7 from '../images/img7.webp';
import img8 from '../images/img8.jpg';
import img9 from '../images/img9.jpg';
import img10 from '../images/img10.jpg';
import img17 from '../images/img17.webp';
import img18 from '../images/img18.jpg';
import img19 from '../images/img19.avif';
import img20 from '../images/img20.jpg';
import img21 from '../images/img21.webp';

const containerVariants = {
  hidden: {},
  visible: {
    transition: {
      staggerChildren: 0.2,
    },
  },
};

const itemVariants = {
  hidden: { opacity: 0, y: 30 },
  visible: { opacity: 1, y: 0, transition: { duration: 0.5, ease: "easeOut" } },
};

const products = [
  { id: 1, name: "AITO T-SHIRT", price: "€85,00", image: img4 },
  { id: 2, name: "Sheer Knit T-Shirt in Cashmere Blend", price: "€360,00", image: img5 },
  { id: 3, name: "Long-Sleeve T-Shirt with Contrast Stitching", price: "€195,00", image: img6 },
  { id: 4, name: "Layered Hem T-Shirt", price: "€240,00", image: img7 },
  { id: 5, name: "Washed Cotton T-Shirt with Zipper Detail", price: "€280,00", image: img8 },
  { id: 6, name: "Sheer Knit T-Shirt in Cashmere Blend", price: "€418,00", image: img9 },
];

const womenProducts = [
  { id: 1, name: "Women's Relaxed Fit T-Shirt", price: "€110,00", image: img10 },
  { id: 2, name: "Soft Touch Crew Neck T-Shirt", price: "€75,00", image: img17 },
  { id: 3, name: "Oversized Linen T-Shirt", price: "€125,00", image: img18 },
  { id: 4, name: "V-Neck Ribbed T-Shirt", price: "€95,00", image: img19 },
  { id: 5, name: "Cropped Boxy T-Shirt", price: "€80,00", image: img20 },
  { id: 6, name: "Modal Blend Long T-Shirt", price: "€120,00", image: img21 },
];

const HomePage = () => {
  return (
    <div className="w-full">
      {/* Hero Section */}
      <div
        className="relative w-full h-[60vh] flex items-center justify-center bg-center bg-cover"
        style={{ backgroundImage: `url(${HeroImage})` }}
      >
        <div className="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent"></div>
        <div className="relative z-10 text-center text-white px-4">
          <h1 className="text-4xl md:text-6xl font-bold mb-4">SUMMER SALE</h1>
          <p className="text-lg md:text-xl mb-6">ENJOY UP TO 75% OFF SITE WIDE</p>
          <Link to="/products">
            <button className="bg-red-600 hover:bg-red-700 text-white py-2 px-6 rounded-full font-semibold transition duration-300">
              SHOP ALL
            </button>
          </Link>
        </div>
      </div>

      {/* Product Feature Section */}
      <div className="px-4 py-10">
        <div className="flex flex-col md:flex-row gap-4">
          {/* Product Images */}
          <div className="flex-1">
            <img src={img9} alt="Smiley Socks" className="w-3/4 h-100 object-cover mb-4 rounded" />
            <div className="flex gap-2">
              <img src={img2} alt="Socks detail" className="w-1/5 h-20 object-cover rounded" />
              <img src={img3} alt="Socks detail" className="w-1/5 h-20 object-cover rounded" />
            </div>
          </div>

          {/* Product Details */}
          <div className="flex-1">
            <h2 className="text-2xl font-bold mb-2">SMILEYCORE 4-PACK CREW SOCKS</h2>
            <p className="text-gray-600 line-through">₦100,200.00</p>
            <p className="text-red-600 font-semibold text-lg mb-4">₦50,100.00</p>
            <p className="mb-4">
              Turn your essentials into a statement with the SmileyCore Crew Socks.
              Designed with durable cotton, these socks feature a stitched-in smile motif,
              and high-performance ventilation.
            </p>
            <ul className="mb-4 list-disc ml-5 text-gray-700">
              <li>Premium 80% cotton blend</li>
              <li>Cushioned sole</li>
              <li>Gym-tested arch support</li>
              <li>4-pair gift pack</li>
              <li>US 7–11.5 / UK 6–10.5 / EU 39–45</li>
            </ul>

            {/* Color Options */}
            <div className="mb-4">
              <h4 className="font-semibold mb-2">COLOR</h4>
              <div className="flex flex-wrap gap-2">
                {["White", "Black", "Gray", "White & brown", "White & black", "Black & Brown", "Gray & Black"].map(color => (
                  <button key={color} className="border px-3 py-1 rounded">{color}</button>
                ))}
              </div>
            </div>

            {/* Size */}
            <div className="mb-4">
              <h4 className="font-semibold mb-2">ONE SIZE</h4>
              <div className="border inline-block px-3 py-1 rounded">US 7-11.5</div>
            </div>

            {/* Add to Cart */}
            <button className="bg-red-600 text-white px-6 py-2 rounded hover:bg-red-700">
              ADD TO CART
            </button>
          </div>
        </div>
      </div>

      {/* Men's T-Shirts */}
      <ProductGrid title="Men's T-Shirts" products={products} />

      {/* Women's T-Shirts */}
      <ProductGrid title="Women's T-Shirts" products={womenProducts} />

      <Footer />
    </div>
  );
};

const ProductGrid = ({ title, products }) => (
  <div className="px-4 py-10">
    <h2 className="text-2xl md:text-3xl font-bold text-center mb-10 uppercase tracking-wide">
      {title}
    </h2>
    <div className="px-4 md:px-8">
      <motion.div
        className="grid grid-cols-2 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-4"
        variants={containerVariants}
        initial="hidden"
        animate="visible"
      >
        {products.map((product) => (
          <motion.div
            key={product.id}
            className="flex flex-col items-center text-center space-y-1"
            variants={itemVariants}
          >
            <div className="relative w-full">
              <span className="absolute top-2 left-2 bg-black text-white text-xs px-2 py-1 rounded uppercase">
                New
              </span>
              <img
                src={product.image}
                alt={product.name}
                className="w-full h-[400px] object-cover rounded-lg"
              />
            </div>
            <div>
              <h3 className="font-semibold text-base">{product.name}</h3>
              <p className="text-sm text-gray-800">{product.price}</p>
            </div>
          </motion.div>
        ))}
      </motion.div>
    </div>
    <div className="text-center mt-10">
      <Link to="/products">
        <button className="bg-black text-white px-8 py-3 rounded-full uppercase hover:bg-gray-800 transition duration-300">
          View All
        </button>
      </Link>
    </div>
  </div>
);

export default HomePage;

import React, { useState, useContext } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { AuthContext } from '../components/AuthContext'; 


const LoginPage = () => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const navigate = useNavigate();
  const { login } = useContext(AuthContext);

  const handleLogin = (e) => {
    e.preventDefault();

    // Hardcoded credentials check
    if (username === 'user' && password === 'password') {
      login(); // update authentication in context
      localStorage.setItem('isAuthenticated', 'true'); // store to persist
      navigate('/products'); // redirect to products page
    } else {
      alert('Invalid credentials');
    }
  };

  return (
    <div className="flex bg-cover bg-gray-100 items-center justify-center h-screen w-full">
      <form
        onSubmit={handleLogin}
        className="bg-white p-8 sm:p-6 md:p-10 rounded-lg shadow-2xl w-11/12 sm:w-3/4 md:w-1/2 lg:w-1/3 max-w-md"
      >
        <h2 className="text-2xl sm:text-3xl font-bold text-center mb-6 sm:mb-8 text-black">
          Welcome Back
        </h2>

        <div className="mb-4 sm:mb-6">
          <label className="block mb-2 font-medium text-gray-700 text-sm sm:text-lg">
            Username
          </label>
          <input
            type="text"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
            className="w-full  rounded-lg p-2 sm:p-3 text-sm sm:text-lg focus:ring-2 focus:ring-blue-500"
            placeholder="Enter your username"
            required
          />
        </div>

        <div className="mb-6 sm:mb-8">
          <label className="block mb-2 font-medium text-gray-700 text-sm sm:text-lg">
            Password
          </label>
          <input
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            className="w-full  rounded-lg p-2 sm:p-3 text-sm sm:text-lg focus:ring-2 focus:ring-blue-500"
            placeholder="Enter your password"
            required
          />
        </div>

        <div className="mb-4 sm:mb-6">
          <button
            type="submit"
            className="bg-blue-600 text-white w-full py-2 sm:py-3 rounded-lg text-sm sm:text-lg hover:bg-blue-700 transition duration-300"
          >
            Login
          </button>
        </div>

        <div className="flex justify-between items-center mb-4 sm:mb-6 mt-2 sm:mt-4">
          <div>
            <input type="checkbox" id="remember" className="mr-2" />
            <label htmlFor="remember" className="text-xs sm:text-sm text-black">
              Remember Me
            </label>
          </div>
          <a href="/forgot-password" className="text-blue-400 hover:underline text-xs sm:text-sm">
            Forgot Password?
          </a>
        </div>

        <div className="mt-4 sm:mt-6">
          <p className="text-center text-sm sm:text-base text-gray-600 mb-2">
            New user?{' '}
            <Link to="/signup" className="text-blue-500 hover:underline font-medium">
              create an account
            </Link>
          </p>
          <button className="bg-gray-500 text-white px-4 py-2 rounded text-sm sm:text-lg hover:bg-gray-600 transition w-full mb-2">
            Login with Google
          </button>
        </div>
      </form>
    </div>
  );
};

export default LoginPage;

import React, { useState } from "react";
import { Link } from "react-router-dom";

const NavBar = () => {
  const [menuOpen, setMenuOpen] = useState(false);

  return (
    <nav className="w-full border-b border-gray-300 px-4 py-6 text-xs font-semibold tracking-wider uppercase">
      <div className="max-w-7xl mx-auto flex items-center justify-between">
        {/* Left: Hamburger (Mobile) or Menu (Desktop) */}
        <div className="flex items-center gap-6">
          {/* Hamburger Icon for Mobile */}
          <button
            onClick={() => setMenuOpen(!menuOpen)}
            className="lg:hidden focus:outline-none"
          >
            <svg
              className="w-5 h-5"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
            </svg>
          </button>

          {/* Desktop Menu */}
          <div className="hidden lg:flex gap-6">
            <Link to="#">Men</Link>
            <Link to="#">Women</Link>
            <Link to="#">Brands</Link>
            <Link to="#">Sale</Link>
          </div>
        </div>

        {/* Center: Logo */}
        <div className="text-sm lg:text-base font-bold tracking-widest">
          <Link to="/">Autograph</Link>
        </div>

        {/* Right: Options (Desktop only) */}
        <div className="hidden lg:flex gap-6 items-center">
          <Link to="#">Search</Link>
          <Link to="/products">Shop</Link>
          <Link to="/login">Account</Link>
          <Link to="#">Wishlist</Link>
          <Link to="/cart">Bag</Link>
        </div>
      </div>

      {/* Mobile Menu Dropdown */}
      {menuOpen && (
        <div className="lg:hidden mt-2 space-y-2 px-1 text-[11px]">
          <div className="flex flex-col space-y-1 border-t border-gray-200 pt-3">
            <Link to="#">Men</Link>
            <Link to="#">Women</Link>
            <Link to="#">Brands</Link>
            <Link to="#">Sale</Link>
          </div>
          <div className="flex flex-col space-y-1 border-t border-gray-200 pt-3">
            <Link to="#">Search</Link>
            <Link to="#">Shop</Link>
            <Link to="#">Account</Link>
            <Link to="#">Wishlist</Link>
            <Link to="#">Bag</Link>
          </div>
        </div>
      )}
    </nav>
  );
};

export default NavBar;

import React, { useContext } from "react";
import { useParams, Link } from "react-router-dom";
import Footer from "../components/Footer";
import allProducts from "../data/ProductsData";
import { CartContext } from "../components/CartContext";

const ProductDetail = () => {
  const { id } = useParams();
  const product = allProducts.find((p) => p.id === parseInt(id));
  const { addToCart } = useContext(CartContext);

  if (!product) return <p className="text-center py-10">Product not found</p>;

  return (
    <div className="px-4 py-10">
      <div className="flex flex-col md:flex-row gap-8">
        <img
          src={product.image}
          alt={product.name}
          className="w-full md:w-1/2 rounded"
        />
        <div className="flex-1">
          <h1 className="text-3xl font-bold mb-4">{product.name}</h1>
          <p className="text-xl text-red-600 mb-2">{product.price}</p>
          <p className="mb-4">Category: {product.category}</p>
          <p className="mb-4">This is a detailed description of the product.</p>
          <button
            onClick={() => addToCart(product)}
            className="bg-red-600 text-white px-6 py-2 rounded hover:bg-red-700"
          >
            ADD TO CART
          </button>
          <div className="mt-4">
            <Link to="/products" className="text-blue-600 underline">
              &larr; Back to Products
            </Link>
          </div>
        </div>
      </div>
      <Footer />
    </div>
  );
};

export default ProductDetail;

import React, { useState, useContext } from "react";
import { motion } from "framer-motion";
import { Link } from "react-router-dom";
import Footer from "../components/Footer";
import allProducts from "../data/ProductsData";
import { CartContext } from "../components/CartContext";

const containerVariants = {
  hidden: {},
  visible: { transition: { staggerChildren: 0.15 } },
};

const itemVariants = {
  hidden: { opacity: 0, y: 30 },
  visible: { opacity: 1, y: 0, transition: { duration: 0.5, ease: "easeOut" } },
  hover: { scale: 1.05, transition: { duration: 0.3 } },
};

const ProductsPage = () => {
  const [filter, setFilter] = useState("All");
  const [searchTerm, setSearchTerm] = useState("");
  const { addToCart } = useContext(CartContext);

  const filteredProducts = allProducts.filter((product) => {
    const matchesCategory =
      filter === "All" ? true : product.category === filter;
    const matchesSearch = product.name
      .toLowerCase()
      .includes(searchTerm.toLowerCase());
    return matchesCategory && matchesSearch;
  });

  return (
    <div className="px-4 py-10">
      <h1 className="text-3xl md:text-4xl font-bold text-center mb-10 uppercase tracking-wide">
        All Products
      </h1>

      {/* Filter Buttons */}
      <div className="flex justify-center mb-6 gap-4">
        {["All", "Men", "Women"].map((category) => (
          <button
            key={category}
            onClick={() => setFilter(category)}
            className={`px-4 py-2 rounded-full border ${
              filter === category ? "bg-black text-white" : "bg-white text-black"
            } hover:bg-black hover:text-white transition`}
          >
            {category}
          </button>
        ))}
      </div>

      {/* Search bar */}
      <div className="flex justify-center mb-8">
        <input
          type="text"
          placeholder="Search for products..."
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
          className="border px-4 py-2 rounded w-full max-w-md"
        />
      </div>

      {/* Product Grid */}
      <motion.div
        className="grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4"
        variants={containerVariants}
        initial="hidden"
        animate="visible"
      >
        {filteredProducts.map((product) => (
          <motion.div
            key={product.id}
            className="flex flex-col items-center text-center space-y-1 cursor-pointer border p-2 rounded"
            variants={itemVariants}
            whileHover="hover"
          >
            <Link to={`/product/${product.id}`} className="w-full">
              <div className="relative w-full">
                <span className="absolute top-2 left-2 bg-black text-white text-xs px-2 py-1 rounded uppercase">
                  New
                </span>
                <img
                  src={product.image}
                  alt={product.name}
                  className="w-full h-[300px] object-cover rounded-lg"
                />
              </div>
              <div>
                <h3 className="font-semibold text-base mt-2">{product.name}</h3>
                <p className="text-sm text-gray-800">{product.price}</p>
              </div>
            </Link>
            <button
              onClick={() => addToCart(product)}
              className="bg-red-600 text-white px-4 py-1 rounded mt-1 hover:bg-red-700"
            >
              Add to Cart
            </button>
          </motion.div>
        ))}
      </motion.div>

      <Footer />
    </div>
  );
};

export default ProductsPage;

import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

const SignUp = () => {
  const [username, setUsername] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const navigate = useNavigate();

  const handleSignUp = (e) => {
    e.preventDefault();

    // Example: Simulating user account creation
    if (username && email && password) {
      alert('Account created successfully!');
      navigate('/login'); // Redirect to login after successful sign-up
    } else {
      alert('Please fill in all fields.');
    }
  };

  return (
    <div className="flex items-center justify-center h-screen w-full bg-gray-100">
      <form
        onSubmit={handleSignUp}
        className="bg-white p-8 rounded-lg shadow-lg w-11/12 sm:w-2/3 md:w-1/2 lg:w-1/3"
      >
        <h2 className="text-2xl font-bold text-center mb-6 text-gray-800">
          Create an Account
        </h2>
        <div className="mb-4">
          <label className="block mb-2 text-sm font-medium text-gray-700">
            Username
          </label>
          <input
            type="text"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
            className="w-full border rounded-lg p-2 focus:ring-2 focus:ring-blue-500"
            placeholder="Enter your username"
            required
          />
        </div>
        <div className="mb-4">
          <label className="block mb-2 text-sm font-medium text-gray-700">
            Email
          </label>
          <input
            type="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            className="w-full border rounded-lg p-2 focus:ring-2 focus:ring-blue-500"
            placeholder="Enter your email"
            required
          />
        </div>
        <div className="mb-6">
          <label className="block mb-2 text-sm font-medium text-gray-700">
            Password
          </label>
          <input
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            className="w-full border rounded-lg p-2 focus:ring-2 focus:ring-blue-500"
            placeholder="Enter your password"
            required
          />
        </div>
        <button
          type="submit"
          className="w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 transition"
        >
          Create Account
        </button>
      </form>
    </div>
  );
};

export default SignUp;

import React from 'react'
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.jsx'
import 'swiper/css';
import 'swiper/css/navigation';
import { CartProvider } from './components/CartContext.jsx'



createRoot(document.getElementById('root')).render(
  <StrictMode>
    <CartProvider>
    <App />
    </CartProvider>
  </StrictMode>,
);
